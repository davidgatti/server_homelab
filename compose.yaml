name: ${COMPOSE_PROJECT_NAME:-homelab}

services:
  speedtest:
    image: openspeedtest/latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${SPEEDTEST_IP}
    mac_address: ${SPEEDTEST_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: speedtest
    environment:
      - TZ=${TZ}
      - CHANGE_CONTAINER_PORTS=True
      - HTTP_PORT=80
    volumes:
      - speedtest-logs:/var/log/letsencrypt

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${REDIS_IP}
    mac_address: ${REDIS_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: redis
    environment:
      - TZ=${TZ}
    command: ["redis-server","--appendonly","yes"]
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${POSTGRES_IP}
    mac_address: ${POSTGRES_MAC}
    dns:
      - ${DOCKER_DNS}
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${QDRANT_IP}
    mac_address: ${QDRANT_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: qdrant
    environment:
      - TZ=${TZ}
      - QDRANT__SERVICE__HTTP_PORT=80
    volumes:
      - qdrant-data:/qdrant/storage:rw

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${N8N_IP}
    mac_address: ${N8N_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: n8n
    environment:
      - TZ=${TZ}
      - GENERIC_TIMEZONE=${TZ}
      - N8N_SECURE_COOKIE=false
      - N8N_PORT=80
    volumes:
      - n8n-data:/home/node/.n8n:rw

  homeassistant:
    image: homeassistant/home-assistant:latest
    restart: unless-stopped
    profiles: [hardware]
    networks:
      homelab:
        ipv4_address: ${HASS_IP}
    mac_address: ${HASS_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: homeassistant
    environment:
      - TZ=${TZ}
      - PORT=80
    volumes:
      - homeassistant-config:/config
      - /run/dbus:/run/dbus:ro
    devices:
      - /dev/bus/usb:/dev/bus/usb
    privileged: true

  jellyfin:
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    profiles: [media]
    networks:
      homelab:
        ipv4_address: ${JELLYFIN_IP}
    mac_address: ${JELLYFIN_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: jellyfin
    environment:
      - TZ=${TZ}
    volumes:
      - /mnt/nas_media:/media:ro
      - jellyfin-config:/config
      - jellyfin-cache:/cache
    healthcheck:
      disable: true

  docmost:
    image: docmost/docmost:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${DOCMOST_IP}
    mac_address: ${DOCMOST_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: docmost
    environment:
      - TZ=${TZ}
      - APP_URL=${DOCMOST_APP_URL}
      - APP_SECRET=${DOCMOST_APP_SECRET}
      - DATABASE_URL=${DOCMOST_DATABASE_URL}
      - REDIS_URL=${DOCMOST_REDIS_URL}
      - PORT=80
    volumes:
      - docmost-data:/app/data/storage

  youtubed:
    image: youtubed:latest
    restart: unless-stopped
    profiles: [media]
    networks:
      homelab:
        ipv4_address: ${YOUTUBED_IP}
    mac_address: ${YOUTUBED_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: youtubed
    environment:
      - TZ=${TZ}
      - PORT=80
    volumes:
      - /mnt/nas_dropbox:/app/downloads

  quake3:
    image: tractr/simple-quake-3-server:latest
    restart: unless-stopped
    profiles: [games]
    networks:
      homelab:
        ipv4_address: ${QUAKE3_IP}
    mac_address: ${QUAKE3_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: quake3
    environment:
      - TZ=${TZ}
      - SERVER_NAME=${QUAKE3_SERVER_NAME}
      - FRONTEND_URL=${QUAKE3_FRONTEND_URL}
      - BOT_SKILLS=${QUAKE3_BOT_SKILLS}
      - MIN_PLAYERS=${QUAKE3_MIN_PLAYERS}
      - MAX_CLIENTS=${QUAKE3_MAX_CLIENTS}
      - API_AUTH_USER=${QUAKE3_API_AUTH_USER}
      - API_AUTH_PASSWORD=${QUAKE3_API_AUTH_PASSWORD}
    volumes:
      - ${QUAKE3_PAK0_PATH}:/home/ioq3srv/ioquake3/baseq3/pak0.pk3:ro

  cups:
    image: unixorn/cupsd:latest
    restart: unless-stopped
    profiles: [hardware]
    networks:
      homelab:
        ipv4_address: ${CUPS_IP}
    mac_address: ${CUPS_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: cups
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - cups-config:/etc/cups
      - /var/run/dbus:/var/run/dbus:ro
      - /dev/bus/usb:/dev/bus/usb
      - /etc/localtime:/etc/localtime:ro
      - /etc/hostname:/etc/hostname:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /etc/timezone:/etc/timezone:ro

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: ${PAPERLESS_IP}
    mac_address: ${PAPERLESS_MAC}
    dns:
      - ${DOCKER_DNS}
    hostname: paperless
    environment:
      - TZ=${TZ}
      - PAPERLESS_DBHOST=${PAPERLESS_DBHOST}
      - PAPERLESS_DBUSER=${PAPERLESS_DBUSER}
      - PAPERLESS_DBPASS=${PAPERLESS_DBPASS}
      - PAPERLESS_REDIS=${PAPERLESS_REDIS}
      - PAPERLESS_BIND_ADDR=0.0.0.0
      - PAPERLESS_PORT=80
    volumes:
      - paperless-config:/etc/paperless
      - paperless-data:/usr/src/paperless/data
      - paperless-media:/usr/src/paperless/media
      - paperless-consume:/usr/src/paperless/consume

networks:
  homelab:
    external: true
    name: ${HOMELAB_NET_NAME}

volumes:
  speedtest-logs:
  redis-data:
  postgres-data:
  qdrant-data:
  n8n-data:
  homeassistant-config:
  jellyfin-config:
  jellyfin-cache:
  docmost-data:
  cups-config:
  paperless-config:
  paperless-data:
  paperless-media:
  paperless-consume:
