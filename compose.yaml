services:
  speedtest:
    image: openspeedtest/latest
    container_name: speedtest
    hostname: speedtest
    restart: unless-stopped
    labels:
      - "homelab.description=Local network speed test server for bandwidth testing"
      - "homelab.purpose=Self-hosted speed test to measure network performance without external dependencies"
      - "homelab.category=network"
      - "homelab.access=HTTP port 80"
      - "homelab.docs=https://github.com/openspeedtest/Speed-Test"
    environment:
      - TZ=Europe/Rome
      - CHANGE_CONTAINER_PORTS=True
      - HTTP_PORT=80
    volumes:
      - speedtest-logs:/var/log/letsencrypt
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.10
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:10  # 10 → 0x0A
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: unless-stopped
    labels:
      - "homelab.description=In-memory data structure store used as cache and session storage"
      - "homelab.purpose=High-performance caching layer with persistence for application data"
      - "homelab.category=cache"
      - "homelab.memory=256MB max with LRU eviction"
      - "homelab.persistence=AOF + RDB snapshots"
      - "homelab.docs=https://redis.io/docs/"
    environment:
      - TZ=Europe/Rome
    volumes:
      - redis-data:/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.11
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:11  # 11 → 0x0B
    command:
      - redis-server
      - --appendonly yes
      - --appendfsync everysec
      - --save 900 1
      - --save 300 10
      - --save 60 10000
      - --maxmemory 256mb
      - --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  postgres:
    image: postgres:17
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    labels:
      - "homelab.description=Primary PostgreSQL database server for application data storage"
      - "homelab.purpose=Relational database with ACID compliance for persistent data storage"
      - "homelab.category=database"
      - "homelab.docs=https://www.postgresql.org/docs/"
    environment:
      - TZ=Europe/Rome
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=default
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=peer
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.12
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:12  # 53 → 0x35
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d default"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    user: postgres

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    hostname: qdrant
    restart: unless-stopped
    labels:
      - "homelab.description=Vector database for AI/ML applications with similarity search capabilities"
      - "homelab.purpose=High-performance vector storage and search engine for embeddings and neural network outputs"
      - "homelab.category=database"
      - "homelab.access=HTTP API port 80, gRPC port 6334"
      - "homelab.persistence=Persistent vector storage with HNSW indexing"
      - "homelab.docs=https://qdrant.tech/documentation/"
    environment:
      - TZ=Europe/Rome
      - QDRANT__SERVICE__HTTP_PORT=80
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.13
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:13  # 13 → 0x0D
    healthcheck:
      test: ["CMD-SHELL", "timeout 10 bash -c '</dev/tcp/localhost/80' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    hostname: n8n
    restart: unless-stopped
    labels:
      - "homelab.description=Workflow automation platform for connecting apps and services"
      - "homelab.purpose=Low-code/no-code automation tool for integrating various APIs and services"
      - "homelab.category=automation"
      - "homelab.access=Web UI on port 80"
      - "homelab.features=Visual workflow builder, API integrations, scheduling, webhooks"
      - "homelab.docs=https://docs.n8n.io/"
    environment:
      - TZ=Europe/Rome
      - GENERIC_TIMEZONE=Europe/Rome
      - N8N_SECURE_COOKIE=false
      - N8N_PORT=80
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.14
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:14  # 14 → 0x0E
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    hostname: homeassistant
    restart: unless-stopped
    labels:
      - "homelab.description=Home automation platform for controlling IoT devices and sensors"
      - "homelab.purpose=Centralized smart home control with device integration and automation rules"
      - "homelab.category=automation"
      - "homelab.access=Web UI on port 80"
      - "homelab.depends=postgres,redis"
      - "homelab.features=Device discovery, automation, dashboards, mobile apps, Zigbee, Bluetooth"
      - "homelab.docs=https://www.home-assistant.io/docs/"
    privileged: true
    environment:
      - TZ=Europe/Rome
    volumes:
      - homeassistant-config:/config
      - /run/dbus:/run/dbus:ro
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"  # Zigbee coordinator
      - "/dev/bus/usb:/dev/bus/usb"  # Bluetooth support
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.15
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:15  # 15 → 0x0F
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fL", "http://localhost"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    hostname: jellyfin
    restart: unless-stopped
    labels:
      - "homelab.description=Media server for streaming movies, TV shows, music, and photos"
      - "homelab.purpose=Self-hosted media streaming platform with transcoding and remote access"
      - "homelab.category=media"
      - "homelab.access=Web UI on port 8096"
      - "homelab.features=Hardware transcoding, DLNA/UPnP, mobile apps, live TV"
      - "homelab.storage=/mnt/nas_media (read-only media library)"
      - "homelab.docs=https://jellyfin.org/docs/"
    environment:
      - TZ=Europe/Rome
      - JELLYFIN_PublishedServerUrl=http://${NETWORK_PREFIX:-192.168.5}.16:8096
    volumes:
      - /mnt/nas_media:/media:ro
      - jellyfin-config:/config
      - jellyfin-cache:/cache
    deploy:
      resources:
        limits:
          cpus: "0.5"     # 50% of CPU (0.5 cores)
          memory: 2G      # 2GB RAM limit
        reservations:
          cpus: "0.1"     # Reserve at least 10% CPU
          memory: 512M    # Reserve at least 512MB RAM
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.16
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:16  # 16 → 0x10
    # No healthcheck as per production configuration

  docmost:
    image: docmost/docmost:latest
    container_name: docmost
    hostname: docmost
    restart: unless-stopped
    labels:
      - "homelab.description=Collaborative documentation platform with real-time editing"
      - "homelab.purpose=Team wiki and knowledge base with markdown support and version control"
      - "homelab.category=documentation"
      - "homelab.access=Web UI on port 80"
      - "homelab.depends=postgres,redis"
      - "homelab.docs=https://docmost.com/docs/"
    environment:
      - TZ=Europe/Rome
      - DATABASE_URL=postgresql://admin:password@postgres:5432/docmost
      - REDIS_URL=redis://redis:6379
      - APP_URL=http://${NETWORK_PREFIX:-192.168.5}.17
      - APP_SECRET=303ddc5b0df7209faa0135bc9f528826d02c0a9d6ce019dd6a267d4b0c3c142a
      - PORT=80
    volumes:
      - docmost-data:/app/data
      - docmost-data-storage:/app/data/storage
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.17
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:17  # 17 → 0x11
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  cups:
    image: unixorn/cupsd:latest
    container_name: cups
    hostname: cups
    restart: unless-stopped
    labels:
      - "homelab.description=Network print server for managing local and network printers"
      - "homelab.purpose=Centralized printer management with web interface and IPP protocol support"
      - "homelab.category=printing"
      - "homelab.access=Web UI on port 80, IPP on port 631"
      - "homelab.docs=https://www.cups.org/doc/"
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - cups-config:/etc/cups
      - cups-logs:/var/log/cups
      - /var/run/dbus:/var/run/dbus:ro
      - /etc/machine-id:/etc/machine-id:ro
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.18
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:18  # 18 → 0x12
    healthcheck:
      test: ["CMD-SHELL", "timeout 10 bash -c '</dev/tcp/localhost/631' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    privileged: true

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    restart: unless-stopped
    labels:
      - "homelab.description=Automatic Docker container updater - monitors and updates containers to latest versions"
      - "homelab.purpose=Container lifecycle management and automated updates scheduled at 4 AM daily"
      - "homelab.category=automation"
      - "homelab.schedule=0 0 4 * * * (4 AM daily)"
      - "homelab.docs=https://containrrr.dev/watchtower/"
    environment:
      - TZ=Europe/Rome
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.19
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:19  # 54 → 0x36

  postgres-backup:
    image: prodrigestivill/postgres-backup-local
    container_name: postgres-backup
    hostname: pg-backup
    restart: unless-stopped
    labels:
      - "homelab.description=Automated PostgreSQL database backup service with retention policies"
      - "homelab.purpose=Creates compressed daily backups of PostgreSQL databases with rotation"
      - "homelab.category=backup"
      - "homelab.schedule=0 2 * * * (2 AM daily)"
      - "homelab.retention=30 days, 4 weeks, 6 months"
      - "homelab.docs=https://github.com/prodrigestivill/docker-postgres-backup-local"
    environment:
      - TZ=Europe/Rome
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=default
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_EXTRA_OPTS=-Z6 --schema-only --blobs
      - SCHEDULE=0 2 * * *
      - BACKUP_KEEP_DAYS=30
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
    volumes:
      # Database backup destination organized by network and database type (e.g., /mnt/backup/192.168.3.x/databases/postgres)
      - /mnt/backup/${NETWORK_PREFIX:-192.168.5}.x/databases/postgres:/backups
      - postgres-backup-data:/var/lib/postgresql/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.20
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:20  # 55 → 0x37
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    hostname: alertmanager
    restart: unless-stopped
    labels:
      - "homelab.description=Prometheus alert routing and notification management system"
      - "homelab.purpose=Handles alerts from Prometheus and routes notifications via email/webhook/etc"
      - "homelab.category=monitoring"
      - "homelab.depends=prometheus"
      - "homelab.docs=https://prometheus.io/docs/alerting/latest/alertmanager/"
    environment:
      - TZ=Europe/Rome
    volumes:
      - alertmanager-data:/alertmanager
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.21
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:21  # 56 → 0x38
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://${NETWORK_PREFIX:-192.168.5}.21'
      - '--web.listen-address=0.0.0.0:80'
      - '--cluster.listen-address=0.0.0.0:9094'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  volume-backup:
    image: jkaninda/volume-backup:latest
    container_name: volume-backup
    hostname: vol-backup
    restart: unless-stopped
    command: backup --cron-expression "0 3 * * *" --prune
    labels:
      - "homelab.description=Professional Docker volume backup service - creates compressed archives of Docker volumes"
      - "homelab.purpose=Backup Docker volumes with proper timezone support and automated retention management"
      - "homelab.category=backup"
      - "homelab.schedule=0 3 * * * (3 AM daily)"
      - "homelab.retention=30 days"
      - "homelab.docs=https://github.com/jkaninda/volume-backup"
    environment:
      - TZ=Europe/Rome
      - BACKUP_KEEP_DAYS=30
      - BACKUP_PREFIX=homelab-backup
    volumes:
      # Mount all volumes to be backed up into /data
      - postgres-data:/data/postgres-data:ro
      - grafana-data:/data/grafana-data:ro
      - prometheus-data:/data/prometheus-data:ro
      - alertmanager-data:/data/alertmanager-data:ro
      - redis-data:/data/redis-data:ro
      - loki-data:/data/loki-data:ro
      - n8n-data:/data/n8n-data:ro
      - homeassistant-config:/data/homeassistant-config:ro
      - qdrant-data:/data/qdrant-data:ro
      - pgadmin-data:/data/pgadmin-data:ro
      - jellyfin-config:/data/jellyfin-config:ro
      - docmost-data:/data/docmost-data:ro
      - docmost-data-storage:/data/docmost-data-storage:ro
      - cups-config:/data/cups-config:ro
      - nut-data:/data/nut-data:ro
      - paperless-data:/data/paperless-data:ro
      - paperless-export:/data/paperless-export:ro
      - paperless-consume:/data/paperless-consume:ro
      - metabase-data:/data/metabase-data:ro
      - metabase-plugins:/data/metabase-plugins:ro
      - nocodb-data:/data/nocodb-data:ro
      - gitea-data:/data/gitea-data:ro
      - act-runner-data:/data/act-runner-data:ro
      - kanboard-data:/data/kanboard-data:ro
      - kanboard-plugins:/data/kanboard-plugins:ro
      # Backup destination organized by network and type (e.g., /mnt/backup/192.168.3.x/volumes)
      - /mnt/backup/${NETWORK_PREFIX:-192.168.5}.x/volumes:/backup
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.22
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:22  # 57 → 0x39
    healthcheck:
      test: ["CMD", "pgrep", "-f", "backup"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    hostname: pgadmin
    restart: unless-stopped
    labels:
      - "homelab.description=Web-based PostgreSQL administration and development platform"
      - "homelab.purpose=Database management interface for PostgreSQL with query editor and monitoring"
      - "homelab.category=database-admin"
      - "homelab.access=admin@example.com / password"
      - "homelab.docs=https://www.pgadmin.org/docs/"
    environment:
      - TZ=Europe/Rome
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.23
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:23  # 58 → 0x3A
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    labels:
      - "homelab.description=Time series database and monitoring system for metrics collection"
      - "homelab.purpose=Scrapes metrics from exporters, stores time series data, and triggers alerts"
      - "homelab.category=monitoring"
      - "homelab.retention=200h (8+ days)"
      - "homelab.targets=postgres-exporter,redis-exporter,cadvisor,blackbox-exporter"
      - "homelab.docs=https://prometheus.io/docs/"
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - prometheus-data:/prometheus
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./configs/prometheus/rules:/etc/prometheus/rules:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.listen-address=0.0.0.0:80'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.24
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:24  # 59 → 0x3B
    depends_on:
      postgres-exporter:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    labels:
      - "homelab.description=Data visualization and monitoring dashboard platform"
      - "homelab.purpose=Create dashboards and visualizations for metrics from Prometheus and logs from Loki"
      - "homelab.category=monitoring"
      - "homelab.access=admin / admin"
      - "homelab.depends=prometheus,loki"
      - "homelab.docs=https://grafana.com/docs/"
    user: "0"
    environment:
      - TZ=Europe/Rome
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_METRICS_ENABLED=true
      - GF_SERVER_HTTP_PORT=80
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./configs/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./configs/grafana/dashboards:/etc/grafana/dashboards:ro
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.25
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:25  # 60 → 0x3C
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    hostname: blackbox
    restart: unless-stopped
    labels:
      - "homelab.description=External service monitoring via HTTP/HTTPS/DNS/TCP/ICMP probes"
      - "homelab.purpose=Monitor website uptime, API health, and network connectivity from external perspective"
      - "homelab.category=monitoring"
      - "homelab.warning=Can generate significant internet traffic if monitoring external sites"
      - "homelab.docs=https://github.com/prometheus/blackbox_exporter"
    environment:
      - TZ=Europe/Rome
    volumes:
      - ./configs/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    command:
      - '--web.listen-address=0.0.0.0:80'
      - '--config.file=/etc/blackbox_exporter/config.yml'
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.26
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:26  # 61 → 0x3D
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    labels:
      - "homelab.description=Container resource usage and performance metrics exporter"
      - "homelab.purpose=Monitors Docker containers CPU, memory, disk, and network usage for Prometheus"
      - "homelab.category=monitoring"
      - "homelab.privileged=true (requires system access for container monitoring)"
      - "homelab.docs=https://github.com/google/cadvisor"
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    command:
      - '--port=80'
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.27
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:27  # 62 → 0x3E
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    hostname: pg-exporter
    restart: unless-stopped
    labels:
      - "homelab.description=PostgreSQL metrics exporter for Prometheus monitoring"
      - "homelab.purpose=Exposes PostgreSQL database metrics: connections, queries, I/O, locks, replication"
      - "homelab.category=monitoring"
      - "homelab.depends=postgres"
      - "homelab.docs=https://github.com/prometheus-community/postgres_exporter"
    environment:
      - TZ=Europe/Rome
      - DATA_SOURCE_NAME=postgresql://admin:password@postgres:5432/default?sslmode=disable
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.28
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:28  # 64 → 0x40
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    hostname: redis-exporter
    restart: unless-stopped
    labels:
      - "homelab.description=Redis metrics exporter for Prometheus monitoring"
      - "homelab.purpose=Exposes Redis performance metrics: memory usage, commands, connections, keys"
      - "homelab.category=monitoring"
      - "homelab.depends=redis"
      - "homelab.docs=https://github.com/oliver006/redis_exporter"
    environment:
      - TZ=Europe/Rome
      - REDIS_ADDR=redis://redis:6379
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.29
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:29  # 65 → 0x41
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/redis_exporter", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  loki:
    image: grafana/loki:latest
    container_name: loki
    hostname: loki
    restart: unless-stopped
    labels:
      - "homelab.description=Log aggregation system for collecting and indexing application logs"
      - "homelab.purpose=Centralized log storage and querying backend for Grafana log exploration"
      - "homelab.category=logging"
      - "homelab.indexing=Label-based log indexing (like Prometheus for logs)"
      - "homelab.docs=https://grafana.com/docs/loki/"
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - loki-data:/loki
      - ./configs/loki/loki.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.30
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:30  # 66 → 0x42
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    hostname: promtail
    restart: unless-stopped
    labels:
      - "homelab.description=Log collection agent that ships Docker container logs to Loki"
      - "homelab.purpose=Scrapes container logs from Docker daemon and forwards to Loki with labels"
      - "homelab.category=logging"
      - "homelab.source=/var/lib/docker/containers (all container logs)"
      - "homelab.depends=loki"
      - "homelab.docs=https://grafana.com/docs/loki/latest/clients/promtail/"
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - ./configs/promtail/promtail.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtail-positions:/tmp
    command: -config.file=/etc/promtail/config.yml
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.31
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:31  # 67 → 0x43
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep promtail | grep -v grep || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nut-upsd:
    image: upshift/nut-upsd:latest
    container_name: nut-upsd
    hostname: nut-upsd
    restart: unless-stopped
    labels:
      - "homelab.description=Network UPS Tools daemon for APC UPS monitoring"
      - "homelab.purpose=Exposes UPS status over network on port 3493"
      - "homelab.category=power"
      - "homelab.access=NUT protocol port 3493"
      - "homelab.docs=https://networkupstools.org/"
    privileged: true
    environment:
      - TZ=Europe/Rome
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.32
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:32  # 68 → 0x44
    healthcheck:
      test: ["CMD-SHELL", "upsc ups@localhost"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  nut-exporter:
    image: hon95/prometheus-nut-exporter:latest
    container_name: nut-exporter
    hostname: nut-exporter
    restart: unless-stopped
    labels:
      - "homelab.description=Prometheus exporter for Network UPS Tools (NUT) metrics"
      - "homelab.purpose=Export UPS metrics (battery level, load, temperature) to Prometheus for monitoring and alerting"
      - "homelab.category=monitoring"
      - "homelab.depends=nut-upsd"
      - "homelab.docs=https://github.com/hon95/prometheus-nut-exporter"
    environment:
      - TZ=Europe/Rome
      - NUT_SERVERS=nut-upsd:3493
      - HTTP_PORT=9199
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.33
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:33  # 69 → 0x45
    depends_on:
      nut-upsd:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9199/nut?target=nut-upsd:3493"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    hostname: paperless
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    labels:
      - "homelab.description=Document management system with OCR and automatic organization"
      - "homelab.purpose=Digitize and organize physical documents with searchable text"
      - "homelab.category=productivity"
      - "homelab.docs=https://docs.paperless-ngx.com/"
    environment:
      - TZ=Europe/Rome
      - PAPERLESS_REDIS=redis://redis:6379
      - PAPERLESS_DBHOST=postgres
      - PAPERLESS_DBNAME=paperless
      - PAPERLESS_DBUSER=paperless
      - PAPERLESS_DBPASS=Paperless2025SecurePass
      - PAPERLESS_SECRET_KEY=o6PemXWLnea/eBW4SxlMDr26lbI04I+6d35QMLxaJggX6s3q1qKQKPtNRrI/fdTYFOA=
      - PAPERLESS_TIME_ZONE=Europe/Rome
      - PAPERLESS_OCR_LANGUAGES=ukr rus
      - PAPERLESS_OCR_LANGUAGE=eng+ukr+rus+ita+deu
      - PAPERLESS_URL=http://192.168.5.20
      - USERMAP_UID=1000
      - USERMAP_GID=1000
      # Optional: Enable Tika for Office document support
      - PAPERLESS_TIKA_ENABLED=1
      - PAPERLESS_TIKA_ENDPOINT=http://tika:9998
      - PAPERLESS_TIKA_GOTENBERG_ENDPOINT=http://gotenberg:3000
      # Enhanced receipt and barcode processing
      - PAPERLESS_CONSUMER_ENABLE_BARCODES=true
      - PAPERLESS_CONSUMER_BARCODE_TIFF_SUPPORT=true
      - PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE=true
      # Advanced OCR Configuration - All Features Enabled
      - PAPERLESS_OCR_SKIP_ARCHIVE_FILE=with_text  # Skip OCR if text already exists
      - PAPERLESS_OCR_CLEAN=clean  # Remove intermediate files automatically
      - PAPERLESS_OCR_DESKEW=true  # Auto-correct skewed documents
      - PAPERLESS_OCR_ROTATE_PAGES=true  # Auto-rotate based on text orientation
      - PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD=12.0  # Rotation sensitivity (degrees)
      - PAPERLESS_OCR_OUTPUT_TYPE=pdfa  # Generate PDF/A compliant archival files
      - PAPERLESS_OCR_PAGES=0  # OCR all pages (0 = all, 1 = first page only)
      - PAPERLESS_OCR_IMAGE_DPI=300  # High-quality OCR processing (300 DPI)
      - PAPERLESS_OCR_MAX_IMAGE_PIXELS=128000000  # Handle large images (128MP limit)
      - PAPERLESS_OCR_COLOR_CONVERSION_STRATEGY=RGB  # Preserve color information
      # Machine Learning Classification - All Features Enabled
      - PAPERLESS_CONSUMER_ENABLE_CLASSIFIER_TAGS=true  # Auto-assign tags based on content
      - PAPERLESS_CONSUMER_CLASSIFIER_FILE_FILTER="*.pdf *.png *.jpg *.jpeg *.tiff"  # Process these file types
      - PAPERLESS_TASK_WORKERS=2  # Parallel processing for ML tasks (adjust based on CPU)
      - PAPERLESS_AUTO_MATCHING_ALGORITHM=auto  # Use automatic matching for correspondents/types
      - PAPERLESS_MATCHING_ALGORITHM=auto  # Enable intelligent matching algorithms
      - PAPERLESS_CONSUMER_ENABLE_CLASSIFIER_CORRESPONDENTS=true  # Auto-assign correspondents
      - PAPERLESS_CONSUMER_ENABLE_CLASSIFIER_DOCUMENT_TYPES=true  # Auto-assign document types
      # Workflow Automation Rules - Enhanced Processing
      - PAPERLESS_CONSUMER_RECURSIVE=true  # Process subdirectories automatically
      - PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS=true  # Use folder names as tags
      - PAPERLESS_FILENAME_DATE_ORDER=YMD  # Extract dates from filenames (Year-Month-Day format)
    volumes:
      - /mnt/nas_documents/media:/usr/src/paperless/media
      - paperless-data:/usr/src/paperless/data
      - paperless-export:/usr/src/paperless/export
      - paperless-consume:/usr/src/paperless/consume
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.34
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:34  # 19 → 0x13
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  tika:
    image: apache/tika:latest
    container_name: tika
    hostname: tika
    restart: unless-stopped
    labels:
      - "homelab.description=Content analysis and detection toolkit for Paperless document processing"
      - "homelab.purpose=Extract text and metadata from various document formats"
      - "homelab.category=utility"
      - "homelab.docs=https://tika.apache.org/"
    environment:
      - TZ=Europe/Rome
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.35
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:35  # 21 → 0x15
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9998"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  gotenberg:
    image: gotenberg/gotenberg:8
    container_name: gotenberg
    hostname: gotenberg
    restart: unless-stopped
    labels:
      - "homelab.description=PDF generation service for Paperless document conversion"
      - "homelab.purpose=Convert Office documents to PDF format for archival"
      - "homelab.category=utility"
      - "homelab.docs=https://gotenberg.dev/"
    environment:
      - TZ=Europe/Rome
    command:
      - gotenberg
      - --chromium-disable-javascript=true
      - --chromium-allow-list=file:///tmp/.*
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.36
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:36  # 22 → 0x16
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    restart: unless-stopped
    labels:
      - "homelab.description=Open source business intelligence tool for exploring and visualizing data"
      - "homelab.purpose=Self-service analytics dashboard for business intelligence and data exploration"
      - "homelab.category=analytics"
      - "homelab.docs=https://www.metabase.com/docs/"
    environment:
      - TZ=Europe/Rome
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=admin
      - MB_DB_PASS=password
      - MB_DB_HOST=postgres
      - JAVA_TIMEZONE=Europe/Rome
      - MB_JETTY_PORT=80
    volumes:
      - /dev/urandom:/dev/random:ro
      - metabase-data:/metabase-data
      - metabase-plugins:/plugins
    user: root
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.37
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:37  # 54 → 0x36
    healthcheck:
      test: ["CMD", "curl", "--fail", "-I", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s
    depends_on:
      - postgres

  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    hostname: nocodb
    restart: unless-stopped
    labels:
      - "homelab.description=No-code database platform - Airtable alternative with API support"
      - "homelab.purpose=Visual database interface with REST/GraphQL APIs and collaborative features"
      - "homelab.category=productivity"
      - "homelab.docs=https://docs.nocodb.com/"
    environment:
      - TZ=Europe/Rome
      - PORT=80
      - NC_AUTH_JWT_SECRET=your-jwt-secret-key-change-this-123456789
      - NC_PUBLIC_URL=http://${NETWORK_PREFIX:-192.168.5}.38
      - NC_DISABLE_TELE=true
    volumes:
      - nocodb-data:/usr/app/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.38
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:38  # 13 → 0x0D
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/api/v1/db/meta/nocodb/info || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  promtail-host:
    image: grafana/promtail:latest
    container_name: promtail-host
    hostname: promtail-host
    restart: unless-stopped
    labels:
      - "homelab.description=Host system log collector - forwards OS logs to Loki for centralized viewing"
      - "homelab.purpose=Scrape host system logs (/var/log) and systemd journal, forward to Loki for Grafana integration"
      - "homelab.category=logging"
      - "homelab.depends=loki"
      - "homelab.source=/var/log, systemd journal"
      - "homelab.docs=https://grafana.com/docs/loki/latest/clients/promtail/"
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - ./configs/promtail/host-promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /run/systemd/journal:/run/systemd/journal:ro
      - promtail-host-positions:/tmp
    command: -config.file=/etc/promtail/config.yml
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.39
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:39  # 71 → 0x47
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep promtail | grep -v grep || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  gitea:
    image: docker.gitea.com/gitea:1.24.6
    container_name: gitea
    hostname: gitea
    restart: unless-stopped
    labels:
      - "homelab.description=Self-hosted Git service with web interface and CI/CD capabilities"
      - "homelab.purpose=Git repository hosting with code review, issue tracking, and team collaboration"
      - "homelab.category=development"
      - "homelab.docs=https://docs.gitea.com/"
    environment:
      - TZ=Europe/Rome
      - USER_UID=1000
      - USER_GID=1000
      # Database configuration
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=gitea
      # Server configuration
      - GITEA__server__DOMAIN=192.168.3.40
      - GITEA__server__HTTP_PORT=80
      - GITEA__server__ROOT_URL=http://gitea.lan/
      - GITEA__server__DISABLE_SSH=false
      - GITEA__server__SSH_PORT=2222
      - GITEA__server__SSH_LISTEN_PORT=2222
      - GITEA__server__START_SSH_SERVER=true
      # Security
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__service__DISABLE_REGISTRATION=true
      - GITEA__service__REQUIRE_SIGNIN_VIEW=false
      # Actions
      - GITEA__actions__ENABLED=true
      - GITEA__actions__DEFAULT_ACTIONS_URL=https://github.com
    volumes:
      - gitea-data:/data
      - /mnt/nas_gitea:/data/gitea/packages
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.40
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:40  # 13 → 0x0D
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  act-runner:
    image: gitea/act_runner:latest
    container_name: act-runner
    hostname: act-runner
    restart: unless-stopped
    labels:
      - "homelab.description=Gitea Actions runner for executing CI/CD workflows"
      - "homelab.purpose=Provides compute resources for running Gitea Actions workflows"
      - "homelab.category=ci-cd"
      - "homelab.docs=https://docs.gitea.com/usage/actions/act-runner"
    environment:
      - TZ=Europe/Rome
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - act-runner-data:/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.41
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:41  # 14 → 0x0E
    depends_on:
      - gitea
    
  kanboard:
    image: kanboard/kanboard:latest
    container_name: kanboard
    hostname: kanboard
    restart: unless-stopped
    labels:
      - "homelab.description=Free and open source Kanban project management software"
      - "homelab.purpose=Visual project management with drag-and-drop task boards"
      - "homelab.category=project-management"
      - "homelab.docs=https://docs.kanboard.org/"
      - "homelab.port=80"
      - "homelab.credentials=admin/admin (first login)"
    environment:
      - TZ=Europe/Rome
      - DATABASE_URL=postgres://kanboard:kanboard@postgres:5432/kanboard
      - DB_RUN_MIGRATIONS=true
      - PLUGIN_INSTALLER=false
    volumes:
      - kanboard-data:/var/www/app/data
      - kanboard-plugins:/var/www/app/plugins
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.42
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:42
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  quake3:
    image: ghcr.io/heyymrdj/docker-k8s-quake3:latest
    container_name: quake3
    hostname: quake3
    restart: unless-stopped
    labels:
      - "homelab.description=Quake 3 Arena dedicated game server for multiplayer gaming"
      - "homelab.purpose=Gaming server providing Quake 3 Arena multiplayer matches"
      - "homelab.category=gaming"
      - "homelab.ports=UDP/27960"
      - "homelab.docs=https://github.com/HeyyMrDJ/docker-k8s-quake3-server"
    environment:
      - TZ=Europe/Rome
    volumes:
      - ./configs/quake3/server.cfg:/home/ioq3srv/baseq3/docker-quake3.cfg:ro
      - ./configs/quake3/pak0.pk3:/home/ioq3srv/baseq3/pak0.pk3:ro
      - ./configs/quake3/maps:/home/ioq3srv/baseq3/maps:ro
      - quake3-data:/home/ioq3srv
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.43
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:43
    ports:
      - "27960:27960/udp"
    healthcheck:
      test: ["CMD", "pgrep", "ioq3ded"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 30s

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    hostname: open-webui
    restart: unless-stopped
    labels:
      - "homelab.description=Open WebUI - ChatGPT-style web interface for AI models (Ollama, OpenAI, etc.)"
      - "homelab.purpose=Web-based chat interface for interacting with large language models"
      - "homelab.category=ai"
      - "homelab.docs=https://docs.openwebui.com/"
      - "homelab.url=http://192.168.5.13"
    environment:
      - TZ=Europe/Rome
      - PORT=80
      - WEBUI_URL=http://openwebui.lan
      - DATA_DIR=/app/backend/data
      - WEBUI_AUTH=True
      - ENABLE_SIGNUP=True
      - WEBUI_SECRET_KEY=open-webui-secret-key-homelab-2024
    volumes:
      - open-webui-data:/app/backend/data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.44
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:44
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  docker-mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: docker-mailserver
    hostname: docker-mailserver
    restart: unless-stopped
    labels:
      - "homelab.description=Simplified internal mail server for homelab notifications"
      - "homelab.purpose=Basic SMTP/IMAP server for internal notifications and testing"
      - "homelab.category=mail"
      - "homelab.ports=25 (SMTP), 587 (submission), 143 (IMAP)"
      - "homelab.docs=https://docker-mailserver.github.io/docker-mailserver/latest/"
    environment:
      - TZ=Europe/Rome
      - OVERRIDE_HOSTNAME=email.lan
      - POSTFIX_INET_PROTOCOLS=ipv4
      - DOVECOT_INET_PROTOCOLS=ipv4
      - ENABLE_RSPAMD=0
      - ENABLE_CLAMAV=0
      - ENABLE_FAIL2BAN=0
      - ENABLE_IMAP=1
      - ENABLE_POP3=0
      - SSL_TYPE=
      - SPOOF_PROTECTION=1
      - PERMIT_DOCKER=network
      - POSTFIX_MYNETWORKS=127.0.0.0/8 [::1]/128 [fe80::]/64 172.16.0.0/12 ${NETWORK_PREFIX:-192.168.5}.0/24
      - POSTMASTER_ADDRESS=postmaster@homelab.local
      - LOG_LEVEL=info
      - DMS_DEBUG=0
    volumes:
      - mailserver-data:/var/mail/
      - mailserver-state:/var/mail-state/
      - mailserver-logs:/var/log/mail/
      - mailserver-config:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.45
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:45
    healthcheck:
      test: ["CMD", "sh", "-c", "ss -lntp | grep -q ':25 ' && ss -lntp | grep -q ':587 ' && ss -lntp | grep -q ':143 '"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mattermost:
    image: mattermost/mattermost-team-edition:latest
    container_name: mattermost
    hostname: mattermost
    restart: unless-stopped
    labels:
      - "homelab.description=Open-source team collaboration platform, Slack alternative"
      - "homelab.purpose=Team chat, file sharing, integrations, and workflows"
      - "homelab.category=collaboration"
      - "homelab.docs=https://docs.mattermost.com/"
    environment:
      - TZ=Europe/Rome
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:mattermost@postgres:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_SERVICESETTINGS_SITEURL=http://mattermost.lan
      - MM_SERVICESETTINGS_LISTENADDRESS=:80
      - MM_EMAILSETTINGS_ENABLEEMAILBATCHING=false
      - MM_EMAILSETTINGS_EMAILNOTIFICATIONCONTENTSTYPE=full
      - MM_EMAILSETTINGS_SENDEMAILNOTIFICATIONS=true
      - MM_EMAILSETTINGS_FEEDBACKNAME=Mattermost
      - MM_EMAILSETTINGS_FEEDBACKEMAIL=dawid@email.lan
      - MM_EMAILSETTINGS_REPLYTOADDRESS=dawid@email.lan
      - MM_EMAILSETTINGS_SMTPSERVER=docker-mailserver
      - MM_EMAILSETTINGS_SMTPPORT=587
      - MM_EMAILSETTINGS_SMTPAUTH=false
      - MM_EMAILSETTINGS_SMTPUSERNAME=
      - MM_EMAILSETTINGS_SMTPPASSWORD=
      - MM_EMAILSETTINGS_CONNECTIONSECURITY=
      - MM_EMAILSETTINGS_SKIPTLSVERIFY=true
    volumes:
      - mattermost-config:/mattermost/config
      - mattermost-data:/mattermost/data
      - mattermost-logs:/mattermost/logs
      - mattermost-plugins:/mattermost/plugins
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.46
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:46
    depends_on:
      - postgres
      - docker-mailserver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/v4/system/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  hasura:
    image: hasura/graphql-engine:latest
    container_name: hasura
    hostname: hasura
    restart: unless-stopped
    labels:
      - "homelab.description=GraphQL API engine that provides instant GraphQL APIs over PostgreSQL"
      - "homelab.purpose=Auto-generate GraphQL APIs with real-time subscriptions, authentication, and authorization"
      - "homelab.category=api"
      - "homelab.docs=https://hasura.io/docs/"
    environment:
      - TZ=Europe/Rome
      - HASURA_GRAPHQL_DATABASE_URL=postgres://hasura:hasura@postgres:5432/hasura
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_DEV_MODE=true
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup,http-log,webhook-log,websocket-log,query-log
      - HASURA_GRAPHQL_ADMIN_SECRET=hasura
      - HASURA_GRAPHQL_SERVER_PORT=80
    depends_on:
      - postgres
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.47
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:47
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/v1/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  linkwarden-meilisearch:
    image: getmeili/meilisearch:v1.12.8
    container_name: linkwarden-meilisearch
    hostname: linkwarden-meilisearch
    restart: unless-stopped
    labels:
      - "homelab.description=Fast, open-source search engine for Linkwarden full-text search capabilities"
      - "homelab.purpose=Provides instant search across all bookmarks and content in Linkwarden"
      - "homelab.category=search"
      - "homelab.docs=https://docs.meilisearch.com/"
    environment:
      - TZ=Europe/Rome
      - MEILI_MASTER_KEY=linkwarden_master_key_change_in_production
      - MEILI_ENV=production
    volumes:
      - linkwarden-meilisearch-data:/meili_data
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.48
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:48  # 16 → 0x10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  linkwarden:
    image: ghcr.io/linkwarden/linkwarden:latest
    container_name: linkwarden
    hostname: linkwarden
    restart: unless-stopped
    labels:
      - "homelab.description=Self-hosted collaborative bookmark manager with link preservation"
      - "homelab.purpose=Organize, preserve and collaborate on bookmarks with screenshots, PDFs, and full-text search"
      - "homelab.category=productivity"
      - "homelab.dashboard=http://192.168.5.17"
      - "homelab.docs=https://docs.linkwarden.app/"
    environment:
      - TZ=Europe/Rome
      - NEXTAUTH_URL=http://linkwarden.lan/api/v1/auth
      - NEXTAUTH_SECRET=linkwarden_secret_change_in_production_very_long_random_string
      - DATABASE_URL=postgresql://linkwarden:linkwarden@postgres:5432/linkwarden
      - MEILI_HOST=http://linkwarden-meilisearch:7700
      - MEILI_MASTER_KEY=linkwarden_master_key_change_in_production
      - PAGINATION_TAKE_COUNT=20
      - AUTOSCROLL_TIMEOUT=30
      - NEXT_PUBLIC_DISABLE_REGISTRATION=false
      - NEXT_PUBLIC_CREDENTIALS_ENABLED=true
      - PORT=80
    volumes:
      - linkwarden-data:/data/data
    depends_on:
      - postgres
      - linkwarden-meilisearch
    networks:
      homelab:
        ipv4_address: ${NETWORK_PREFIX:-192.168.5}.49
        mac_address: ${MAC_NETWORK_PREFIX:-02:42:48:4C:05}:49  # 17 → 0x11
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres-data:
    driver: local
  postgres-backup-data:
    driver: local
  pgadmin-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  alertmanager-data:
    driver: local
  redis-data:
    driver: local
  speedtest-logs:
    driver: local
  qdrant-data:
    driver: local
  n8n-data:
    driver: local
  loki-data:
    driver: local
  promtail-positions:
    driver: local
  promtail-host-positions:
    driver: local
  jellyfin-config:
    driver: local
  jellyfin-cache:
    driver: local
  docmost-data:
    driver: local
  docmost-data-storage:
    driver: local
  homeassistant-config:
    driver: local
  cups-config:
    driver: local
  cups-logs:
    driver: local
  nut-data:
    driver: local
  paperless-data:
    driver: local
  paperless-export:
    driver: local
  paperless-consume:
    driver: local
  metabase-data:
    driver: local
  metabase-plugins:
    driver: local
  nocodb-data:
    driver: local
  gitea-data:
    driver: local
  act-runner-data:
    driver: local
  kanboard-data:
    driver: local
  kanboard-plugins:
    driver: local
  quake3-data:
    driver: local
  open-webui-data:
    driver: local
  mailserver-data:
    driver: local
  mailserver-state:
    driver: local
  mailserver-logs:
    driver: local
  mailserver-config:
    driver: local
  mattermost-config:
    driver: local
  mattermost-data:
    driver: local
  mattermost-logs:
    driver: local
  mattermost-plugins:
    driver: local
  linkwarden-meilisearch-data:
    driver: local
  linkwarden-data:
    driver: local

networks:
  homelab:
    name: homelab
    driver: macvlan
    driver_opts:
      parent: ${NETWORK_INTERFACE:-eno1}
    ipam:
      config:
        - subnet: ${NETWORK_PREFIX:-192.168.5}.0/24
          gateway: ${NETWORK_PREFIX:-192.168.5}.1
