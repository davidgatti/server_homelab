services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=default
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=peer
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      homelab:
        ipv4_address: 192.168.3.53
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d default"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    user: postgres
    deploy:
      resources:
        limits:
          memory: 800M        # Conservative for low-RAM system
          cpus: '0.8'         # 80% of one core max (Celeron-friendly)
        reservations:
          memory: 400M        # Guaranteed for database performance
          cpus: '0.2'         # 20% guaranteed

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      homelab:
        ipv4_address: 192.168.3.54
    deploy:
      resources:
        limits:
          memory: 128M        # Watchtower is very lightweight
          cpus: '0.1'         # Minimal CPU for background task
        reservations:
          memory: 64M         # Small guaranteed allocation
          cpus: '0.05'        # 5% CPU minimum

  postgres-backup:
    image: prodrigestivill/postgres-backup-local
    container_name: postgres-backup
    restart: unless-stopped
    user: postgres:postgres
    environment:
      - TZ=Europe/Rome
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=default
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_EXTRA_OPTS=-Z6 --schema-only --blobs
      - SCHEDULE=0 2 * * *
      - BACKUP_KEEP_DAYS=30
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
    volumes:
      - /opt/homelab/backups/postgres:/backups
    networks:
      homelab:
        ipv4_address: 192.168.3.55
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  volume-backup:
    image: offen/docker-volume-backup:latest
    container_name: volume-backup
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - BACKUP_CRON_EXPRESSION=0 3 * * *
      - BACKUP_FILENAME=backup-%Y%m%d-%H%M%S.tar.gz
      - BACKUP_RETENTION_DAYS=30
      - BACKUP_STOP_DURING_BACKUP_LABEL=docker-volume-backup.stop-during-backup=true
    volumes:
      - postgres-data:/backup/postgres-data:ro
      - /opt/homelab/backups/postgres:/backup/postgres:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/homelab/backups/volumes:/archive
    networks:
      homelab:
        ipv4_address: 192.168.3.57
    healthcheck:
      test: ["CMD", "pgrep", "-f", "backup"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M        # Backup can spike but should be limited
          cpus: '0.3'         # Backup I/O intensive but short bursts
        reservations:
          memory: 128M        # Minimal guaranteed
          cpus: '0.05'        # Very low CPU when idle

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      homelab:
        ipv4_address: 192.168.3.58
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 300M        # pgAdmin web interface (HomeLab usage)
          cpus: '0.25'        # Light web interface
        reservations:
          memory: 150M        # Reasonable guarantee
          cpus: '0.05'        # Minimal CPU when idle

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "0"
    environment:
      - TZ=Europe/Rome
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_METRICS_ENABLED=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    networks:
      homelab:
        ipv4_address: 192.168.3.60
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 400M        # Grafana for HomeLab dashboards
          cpus: '0.4'         # Can be CPU intensive with complex dashboards
        reservations:
          memory: 200M        # Reasonable guarantee for web interface
          cpus: '0.1'         # 10% CPU minimum

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: "0"
    environment:
      - TZ=Europe/Rome
    volumes:
      - prometheus-data:/prometheus
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.listen-address=0.0.0.0:80'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      homelab:
        ipv4_address: 192.168.3.59
    depends_on:
      postgres-exporter:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    deploy:
      resources:
        limits:
          memory: 500M        # Prometheus needs memory for time series data
          cpus: '0.6'         # Can be CPU intensive during scraping
        reservations:
          memory: 250M        # Guaranteed for metrics storage
          cpus: '0.15'        # 15% CPU minimum

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    command:
      - '--port=80'
    networks:
      homelab:
        ipv4_address: 192.168.3.62
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 200M        # cAdvisor is lightweight monitoring
          cpus: '0.2'         # Low CPU for container metrics
        reservations:
          memory: 100M        # Small guaranteed allocation
          cpus: '0.05'        # Minimal CPU guarantee

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - DATA_SOURCE_NAME=postgresql://admin:password@postgres:5432/default?sslmode=disable
    networks:
      homelab:
        ipv4_address: 192.168.3.64
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 100M        # Very lightweight metrics exporter
          cpus: '0.1'         # Minimal CPU for metrics export
        reservations:
          memory: 50M         # Small guaranteed allocation
          cpus: '0.02'        # 2% CPU minimum

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  homelab:
    name: homelab
    driver: macvlan
    driver_opts:
      parent: eno1
    ipam:
      config:
        - subnet: 192.168.3.0/24
          gateway: 192.168.3.1
